procedure Bool.11 (#Attr.2, #Attr.3):
    let Bool.24 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.24;

procedure Bool.2 ():
    let Bool.23 : Int1 = true;
    ret Bool.23;

procedure List.2 (List.114, List.115):
    let List.639 : U64 = CallByName List.6 List.114;
    let List.635 : Int1 = CallByName Num.22 List.115 List.639;
    if List.635 then
        let List.637 : I64 = CallByName List.66 List.114 List.115;
        let List.636 : [C {}, C I64] = TagId(1) List.637;
        ret List.636;
    else
        let List.634 : {} = Struct {};
        let List.633 : [C {}, C I64] = TagId(0) List.634;
        ret List.633;

procedure List.6 (#Attr.2):
    let List.640 : U64 = lowlevel ListLenU64 #Attr.2;
    ret List.640;

procedure List.66 (#Attr.2, #Attr.3):
    let List.638 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.638;

procedure List.9 (List.386):
    let List.632 : U64 = 0i64;
    let List.625 : [C {}, C I64] = CallByName List.2 List.386 List.632;
    let List.629 : U8 = 1i64;
    let List.630 : U8 = GetTagId List.625;
    let List.631 : Int1 = lowlevel Eq List.629 List.630;
    if List.631 then
        let List.387 : I64 = UnionAtIndex (Id 1) (Index 0) List.625;
        let List.626 : [C Int1, C I64] = TagId(1) List.387;
        ret List.626;
    else
        let List.628 : Int1 = true;
        let List.627 : [C Int1, C I64] = TagId(0) List.628;
        ret List.627;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.281 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.281;

procedure Str.27 (Str.82):
    let Str.236 : [C Int1, C I64] = CallByName Str.64 Str.82;
    ret Str.236;

procedure Str.42 (#Attr.2):
    let Str.244 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.244;

procedure Str.64 (Str.189):
    let Str.190 : {I64, U8} = CallByName Str.42 Str.189;
    let Str.242 : U8 = StructAtIndex 1 Str.190;
    let Str.243 : U8 = 0i64;
    let Str.239 : Int1 = CallByName Bool.11 Str.242 Str.243;
    if Str.239 then
        let Str.241 : I64 = StructAtIndex 0 Str.190;
        let Str.240 : [C Int1, C I64] = TagId(1) Str.241;
        ret Str.240;
    else
        let Str.238 : Int1 = false;
        let Str.237 : [C Int1, C I64] = TagId(0) Str.238;
        ret Str.237;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        dec Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        dec Test.2;
        ret Test.1;
